{"ast":null,"code":"var _jsxFileName = \"/Users/faisalalhashem/devspace/udacity/full-stack/projects/trivia_api/frontend/src/components/QuestionView.js\";\nimport React, { Component } from \"react\";\nimport \"../stylesheets/App.css\";\nimport Question from \"./Question\";\nimport Search from \"./Search\";\nimport $ from \"jquery\";\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n\n    this.getQuestions = () => {\n      $.ajax({\n        url: \"/questions?page=\".concat(this.state.page),\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            categories: result.categories,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert(\"Unable to load questions. Please try your request again\");\n          return;\n        }\n      });\n    };\n\n    this.getByCategory = id => {\n      $.ajax({\n        url: \"/categories/\".concat(id, \"/questions\"),\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert(\"Unable to load questions. Please try your request again\");\n          return;\n        }\n      });\n    };\n\n    this.submitSearch = searchTerm => {\n      $.ajax({\n        url: \"/questions\",\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: \"json\",\n        contentType: \"application/json\",\n        data: JSON.stringify({\n          searchTerm: searchTerm\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert(\"Unable to load questions. Please try your request again\");\n          return;\n        }\n      });\n    };\n\n    this.questionAction = id => action => {\n      if (action === \"DELETE\") {\n        if (window.confirm(\"are you sure you want to delete the question?\")) {\n          $.ajax({\n            url: \"/questions/\".concat(id),\n            //TODO: update request URL\n            type: \"DELETE\",\n            success: result => {\n              this.getQuestions();\n            },\n            error: error => {\n              alert(\"Unable to load questions. Please try your request again\");\n              return;\n            }\n          });\n        }\n      }\n    };\n\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(React.createElement(\"span\", {\n        key: i,\n        className: \"page-num \".concat(i === this.state.page ? \"active\" : \"\"),\n        onClick: () => {\n          this.selectPage(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, i));\n    }\n\n    return pageNumbers;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"question-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"categories-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      onClick: () => {\n        this.getQuestions();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, Object.keys(this.state.categories).map(id => React.createElement(\"li\", {\n      key: id,\n      onClick: () => {\n        this.getByCategory(id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.categories[id], React.createElement(\"img\", {\n      className: \"category\",\n      src: \"\".concat(this.state.categories[id].toLowerCase(), \".svg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })))), React.createElement(Search, {\n      submitSearch: this.submitSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"questions-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Questions\"), this.state.questions.map((q, ind) => React.createElement(Question, {\n      key: q.id,\n      question: q.question,\n      answer: q.answer,\n      category: this.state.categories[q.category],\n      difficulty: q.difficulty,\n      questionAction: this.questionAction(q.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pagination-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.createPagination())));\n  }\n\n}\n\nexport default QuestionView;","map":{"version":3,"sources":["/Users/faisalalhashem/devspace/udacity/full-stack/projects/trivia_api/frontend/src/components/QuestionView.js"],"names":["React","Component","Question","Search","$","QuestionView","constructor","getQuestions","ajax","url","state","page","type","success","result","setState","questions","totalQuestions","total_questions","categories","currentCategory","current_category","error","alert","getByCategory","id","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","componentDidMount","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","render","Object","keys","map","toLowerCase","q","ind","question","answer","category","difficulty"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../stylesheets/App.css\";\nimport Question from \"./Question\";\nimport Search from \"./Search\";\nimport $ from \"jquery\";\n\nclass QuestionView extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tquestions: [],\n\t\t\tpage: 1,\n\t\t\ttotalQuestions: 0,\n\t\t\tcategories: {},\n\t\t\tcurrentCategory: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getQuestions();\n\t}\n\n\tgetQuestions = () => {\n\t\t$.ajax({\n\t\t\turl: `/questions?page=${this.state.page}`, //TODO: update request URL\n\t\t\ttype: \"GET\",\n\t\t\tsuccess: (result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestions: result.questions,\n\t\t\t\t\ttotalQuestions: result.total_questions,\n\t\t\t\t\tcategories: result.categories,\n\t\t\t\t\tcurrentCategory: result.current_category,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\talert(\"Unable to load questions. Please try your request again\");\n\t\t\t\treturn;\n\t\t\t},\n\t\t});\n\t};\n\n\tselectPage(num) {\n\t\tthis.setState({ page: num }, () => this.getQuestions());\n\t}\n\n\tcreatePagination() {\n\t\tlet pageNumbers = [];\n\t\tlet maxPage = Math.ceil(this.state.totalQuestions / 10);\n\t\tfor (let i = 1; i <= maxPage; i++) {\n\t\t\tpageNumbers.push(\n\t\t\t\t<span\n\t\t\t\t\tkey={i}\n\t\t\t\t\tclassName={`page-num ${i === this.state.page ? \"active\" : \"\"}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.selectPage(i);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{i}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn pageNumbers;\n\t}\n\n\tgetByCategory = (id) => {\n\t\t$.ajax({\n\t\t\turl: `/categories/${id}/questions`, //TODO: update request URL\n\t\t\ttype: \"GET\",\n\t\t\tsuccess: (result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestions: result.questions,\n\t\t\t\t\ttotalQuestions: result.total_questions,\n\t\t\t\t\tcurrentCategory: result.current_category,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\talert(\"Unable to load questions. Please try your request again\");\n\t\t\t\treturn;\n\t\t\t},\n\t\t});\n\t};\n\n\tsubmitSearch = (searchTerm) => {\n\t\t$.ajax({\n\t\t\turl: `/questions`, //TODO: update request URL\n\t\t\ttype: \"POST\",\n\t\t\tdataType: \"json\",\n\t\t\tcontentType: \"application/json\",\n\t\t\tdata: JSON.stringify({ searchTerm: searchTerm }),\n\t\t\txhrFields: {\n\t\t\t\twithCredentials: true,\n\t\t\t},\n\t\t\tcrossDomain: true,\n\t\t\tsuccess: (result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestions: result.questions,\n\t\t\t\t\ttotalQuestions: result.total_questions,\n\t\t\t\t\tcurrentCategory: result.current_category,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t},\n\t\t\terror: (error) => {\n\t\t\t\talert(\"Unable to load questions. Please try your request again\");\n\t\t\t\treturn;\n\t\t\t},\n\t\t});\n\t};\n\n\tquestionAction = (id) => (action) => {\n\t\tif (action === \"DELETE\") {\n\t\t\tif (window.confirm(\"are you sure you want to delete the question?\")) {\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: `/questions/${id}`, //TODO: update request URL\n\t\t\t\t\ttype: \"DELETE\",\n\t\t\t\t\tsuccess: (result) => {\n\t\t\t\t\t\tthis.getQuestions();\n\t\t\t\t\t},\n\t\t\t\t\terror: (error) => {\n\t\t\t\t\t\talert(\"Unable to load questions. Please try your request again\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"question-view\">\n\t\t\t\t<div className=\"categories-list\">\n\t\t\t\t\t<h2\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.getQuestions();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tCategories\n\t\t\t\t\t</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{Object.keys(this.state.categories).map((id) => (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.getByCategory(id);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.categories[id]}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName=\"category\"\n\t\t\t\t\t\t\t\t\tsrc={`${this.state.categories[id].toLowerCase()}.svg`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<Search submitSearch={this.submitSearch} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"questions-list\">\n\t\t\t\t\t<h2>Questions</h2>\n\t\t\t\t\t{this.state.questions.map((q, ind) => (\n\t\t\t\t\t\t<Question\n\t\t\t\t\t\t\tkey={q.id}\n\t\t\t\t\t\t\tquestion={q.question}\n\t\t\t\t\t\t\tanswer={q.answer}\n\t\t\t\t\t\t\tcategory={this.state.categories[q.category]}\n\t\t\t\t\t\t\tdifficulty={q.difficulty}\n\t\t\t\t\t\t\tquestionAction={this.questionAction(q.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t<div className=\"pagination-menu\">{this.createPagination()}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default QuestionView;\n"]},"metadata":{},"sourceType":"module"}